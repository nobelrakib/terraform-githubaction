name: "ansible-infra-automation"
on:
  push:
    branches: [main, stage,infra-automation-with-github-action-ansible]
    paths: ['ansible/**']
  pull_request:
    branches: [main]
    paths: ['ansible/**']

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-1

jobs:
  ansible-automation:
    name: "Ansible Infrastructure Automation"
    runs-on: [self-hosted]
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible python3-pip git curl wget jq

      - name: Create dynamic inventory
        run: |
          cd ansible
          cat > inventory-dynamic.yml << EOF
          ---
          all:
            children:
              k3s_masters:
                hosts:
                  k3s-master-01:
                    ansible_host: 10.0.2.206
                    ansible_user: ubuntu
                    ansible_ssh_private_key_file: ~/k3s-cluster/dev-key.pem
                    node_role: master
                    node_type: control-plane
              k3s_workers:
                hosts:
                  k3s-worker-01:
                    ansible_host: 10.0.2.20
                    ansible_user: ubuntu
                    ansible_ssh_private_key_file: ~/k3s-cluster/dev-key.pem
                  k3s-worker-02:
                    ansible_host: 10.0.2.21
                    ansible_user: ubuntu
                    ansible_ssh_private_key_file: ~/k3s-cluster/dev-key.pem
              k3s_cluster:
                children:
                  k3s_masters:
                  k3s_workers:
            vars:
              ansible_python_interpreter: /usr/bin/python3
              ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
              ansible_timeout: 30
              environment: dev
          EOF

      - name: Create Ansible configuration
        run: |
          cd ansible
          cat > ansible.cfg << EOF
          [defaults]
          host_key_checking = False
          inventory = inventory-dynamic.yml
          remote_user = ubuntu
          private_key_file = ~/k3s-cluster/dev-key.pem
          timeout = 30
          gathering = smart
          fact_caching = memory

          [ssh_connection]
          ssh_args = -o ControlMaster=auto -o ControlPersist=60s -o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes
          EOF

      - name: Display inventory structure
        run: |
          cd ansible
          echo "Displaying inventory structure..."
          ansible-inventory --list -y

      - name: Test connectivity to EC2 instances
        run: |
          cd ansible
          echo "Testing connectivity to all nodes..."
          ansible all -m ping -v

      - name: Run K3s cluster setup playbook
        run: |
          cd ansible
          echo "Deploying K3s multi-node cluster..."
          ansible-playbook k3s-multi-node-cluster.yml -v

      - name: Verify cluster deployment
        run: |
          cd ansible
          echo "Verifying cluster deployment..."
          ansible k3s_masters -m shell -a "kubectl get nodes" -v

      - name: Get cluster information
        run: |
          cd ansible
          echo "Getting cluster information..."
          ansible k3s_masters -m shell -a "kubectl cluster-info" -v

      - name: Check K3s service status
        run: |
          cd ansible
          echo "Checking K3s service status on all nodes..."
          ansible all -m shell -a "systemctl status k3s" -v 